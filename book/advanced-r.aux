\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\HyPL@Entry{10<</S/r /St 7>>}
\@input{Introduction.aux}
\HyPL@Entry{12<</S/D>>}
\@writefile{toc}{\contentsline {part}{I\hspace  {1em}Foundations}{1}{part.1}}
\@input{Data-structures.aux}
\@input{Subsetting.aux}
\@input{Vocabulary.aux}
\@input{Style.aux}
\@input{Functions.aux}
\@input{OO-essentials.aux}
\@input{Environments.aux}
\@input{Exceptions-Debugging.aux}
\@writefile{toc}{\contentsline {part}{II\hspace  {1em}Functional programming}{3}{part.2}}
\@input{Functional-programming.aux}
\@input{Functionals.aux}
\@input{Function-operators.aux}
\@writefile{toc}{\contentsline {part}{III\hspace  {1em}Computing on the language}{5}{part.3}}
\@input{Computing-on-the-language.aux}
\@input{Expressions.aux}
\@input{dsl.aux}
\@writefile{toc}{\contentsline {part}{IV\hspace  {1em}Performance}{7}{part.4}}
\@input{Performance.aux}
\@input{Profiling.aux}
\@input{memory.aux}
\@input{Rcpp.aux}
\@input{C-interface.aux}
